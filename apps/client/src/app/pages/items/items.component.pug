.notification.is-warning('*ngIf'='error$ | async as error')
  button.delete('(click)'='error$.next(null)')
  | {{error}}

nav.panel
  .notification.is-small(*ngIf="existingItem$ | async as existingItem")
    p.ml-1 Item with this URL already exists:
    button.delete('(click)'='existingItem$ = null')
    tt-list-item(
        [item]="existingItem",
        [tags]="tags$ | async",
        (startReading)="itemsService.startReading($event)",
        (finishReading)="itemsService.finishReading($event)",
        (undoReading)="itemsService.markAsNew($event)",
        (delete)="existingItem$ = null; itemsService.remove($event)",
        (retryURLParsing)="itemsService.retryURLParsing($event)",
        (toggleTag)="itemsService.toggleTag($event.itemId, $event.isSelected, $event.tagId)",
        (toggleFavourite)="itemsService.toggleFavourite($event.id, $event.isFavourite)",
        (tagClick)="routerHelper.toItemsWithFilter({tagId: $event})",
        (changeRating)="itemsService.changeRating($event.id, $event.rating)",
        (changeComment)="itemsService.changeComment($event.id, $event.comment)",
        (setPriority)="itemsService.setPriority($event.item.id, $event.priority)",
        (setTitle)="itemsService.setTitle($event.item.id, $event.title)",
        (setURL)="itemsService.setURL($event.item.id, $event.url)",
    )
  tt-items-add('(add)'='create($event)', '[tags]'='tags$ | async')
  tt-filter('[tags]'='tags$ | async', '[filter]'='filter$ | async', '(changed)'='routerHelper.toItemsWithFilter($event)')
  tt-list('[items]'='items$ | async',
          '[tags]'='tags$ | async',
          '[pagination]'='pagination$ | async',
          '(startReading)'='itemsService.startReading($event)',
          '(finishReading)'='itemsService.finishReading($event)',
          '(undoReading)'='itemsService.markAsNew($event)',
          '(toggleTag)'='itemsService.toggleTag($event.itemId, $event.isSelected, $event.tagId)',
          '(toggleFavourite)'='itemsService.toggleFavourite($event.id, $event.isFavourite)',
          '(delete)'='itemsService.remove($event)',
          '(retryURLParsing)'='itemsService.retryURLParsing($event)',
          '(loadPrev)'='loadPrev()',
          '(loadNext)'='loadNext()',
          '(tagClick)'='routerHelper.toItemsWithFilter({tagId: $event})',
          '(changeRating)'='itemsService.changeRating($event.id, $event.rating)',
          '(changeComment)'='itemsService.changeComment($event.id, $event.comment)',
          (setPriority)="itemsService.setPriority($event.item.id, $event.priority)",
          (setTitle)="itemsService.setTitle($event.item.id, $event.title)",
          (setURL)="itemsService.setURL($event.item.id, $event.url)",
  )

