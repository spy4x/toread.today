.dropdown.is-hoverable([class.is-right]="isDropdownRight")
  .dropdown-trigger
    ng-container('*ngIf'='!isTitleCustom')
      a([ngClass]="{'has-text-grey-light': title === getActiveTitle(), 'has-text-info': title !== getActiveTitle()}")
        span {{getActiveTitle()}}
    ng-content
  .dropdown-menu.dropdown-menu--w-none.dropdown-menu--tiny-items(role='menu')
    .dropdown-content
      .dropdown-item(*ngIf="helpText") {{helpText}}
      a.dropdown-item.has-text-grey-light('*ngIf'='isAllTagsVisible', '(click)'='deselectAll()')
        span.icon.mr-2
          i.fas.fa-check('[ngStyle]'='{"visibility": getSelected().length ? "hidden" : "visible"}')
        span All tags
      hr.dropdown-divider('*ngIf'='isAllTagsVisible && tags?.length')
      .dropdown-item
        input.input.is-small(placeholder="Search", [(ngModel)]="searchText")
      hr.dropdown-divider
      a.dropdown-item(
          *ngFor="let tag of tags | filterByField:[{field: 'title', value: searchText, match: 'includesString'}]",
          href="javascript:;",
          (click)="toggleTag(tag)")
        span.icon.mr-1([style.color]="tag.color")
          i.fas.fa-check('[ngStyle]'='{"visibility": isSelected(tag) ? "visible" : "hidden"}')
        span([style.color]="tag.color") {{ tag.title }}

      .dropdown-item('*ngIf'='!tags?.length')
        span(style='min-width: 85px') No tags yet.&nbsp;
          br
          a(routerLink='/tags') Create new
