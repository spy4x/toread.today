.field.has-addons.is-fullwidth.pb-3.top-control
  .control.is-expanded
    input.input(
        placeholder='Add new tag',
        '#newTagTitleInput'='',
        '(input)'='newTagTitle = newTagTitleInput.value',
        '(keydown.enter)'='createHandler(newTagTitle, newTagColor);newTagTitleInput.value="";newTagTitle=""')

  .control
    .dropdown.is-hoverable.is-right.button
      .dropdown-trigger
        a.color-circle('[ngStyle]'='{"background-color": newTagColor}')
      .dropdown-menu.dropdown-menu--w-none(role='menu')
        .dropdown-content
          a.dropdown-item(
              '*ngFor'='let color of colors',
              '(click)'='newTagColor = color',
              '[class.is-active]'='newTagColor === color')
            span.tag('[ngStyle]'='{"background-color": color, "color": "white"}') {{newTagTitle || 'New tag'}}

  .control
    button.button.has-text-grey('(click)'='createHandler(newTagTitle, newTagColor);newTagTitleInput.value="";newTagTitle=""', title='Create tag')
      span.icon
        i.fas.fa-plus



nav.panel

  .tag-item.panel-block('*ngFor'='let tag of tags')

    .tag-item--title

      span.tag(
          '*ngIf'='!isInEditMode(tag.id)',
          '[ngStyle]'='{"background-color": tag.color || "#209cee", "color": "white"}') {{tag.title}}
      .field.has-addons('*ngIf'='isInEditMode(tag.id)')
        p.control
          input.input(
          type='text',
          placeholder='Tag title',
          '#input'='',
          '[value]'='tag.title'
          '(keydown.enter)'='setTitle(tag, input.value)')
        p.control
          button.button.is-primary('(click)'='setTitle(tag, input.value)', title='Save tag title')
            span.icon.is-small
              i.far.fa-save
        p.control
          button.button('(click)'='toggleEditMode(tag)', title='Cancel edit')
            span.icon.is-small
              i.fas.fa-times

    .dropdown.is-hoverable.is-right.ml-3
      .dropdown-trigger
        a.color-circle('[ngStyle]'='{"background-color": tag.color || "#00d1b2"}')
      .dropdown-menu.dropdown-menu--w-none(role='menu')
        .dropdown-content
          a.dropdown-item(
              '*ngFor'='let color of colors',
              '(click)'='setColor(tag, color)',
              '[class.is-active]'='isColor(tag, color)',)
            span.tag('[ngStyle]'='{"background-color": color, "color": "white"}') {{ tag.title }}

    a.icon.is-small.ml-3.has-text-primary(
        '*ngIf'='!isInEditMode(tag.id)',
        title='Edit tag',
        '(click)'='toggleEditMode(tag)')
      i.far.fa-edit

    a.icon.is-small.ml-3.has-text-danger(title='Delete tag', '(click)'='deleteHandler(tag)')
      i.far.fa-trash-alt
