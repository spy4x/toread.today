.infinite-scroll-container(
    infinite-scroll='',
    '[infiniteScrollThrottle]'="300",
    '(scrolled)'='loadMore.emit()')

  .item.panel-block.is-block('*ngFor'='let item of items')
    .columns.is-mobile
      .column
        .item--title
          a.item--title--text.mr-2(  '[href]'='item.url',
              target='_blank',
              '(click)'='read(item)',
              '[title]'='item.url')
            i.is-inline.mr-2(aria-hidden='true', '[ngClass]'='item.type | getIconByItemType')
            | {{item.title || item.url}}

        .item--actions.mt-2.mr-3
          a('[ngClass]'='{"has-text-primary": item.rating === 1}', '(click)'='setRating(item, 1)')
            i.far.fa-thumbs-up
          a('[ngClass]'='{"has-text-primary": item.rating === -1}', '(click)'='setRating(item, -1)')
            i.far.fa-thumbs-down.ml-2
          a('[ngClass]'='{"has-text-primary": item.withComment}')
            i.far.fa-comment-alt.ml-3
        .item--tags.mt-2('*ngIf'='item.tags.length')
          a.tag.mr-2(
          '*ngFor'='let tagId of item.tags',
          '(click)'='tagClick.emit(tagId)',
          '[ngStyle]'='{"background-color": (tagId | tagById:tags)?.color || "#00d1b2", "color": "white"}')
            | {{(tagId | tagById:tags)?.title || 'Tag not found'}}

      .column.is-narrow

        .icon.is-small.has-text-info.mr-3(
            '*ngIf'='item.urlParseStatus === "notStarted"',
            title='URL parsing is in progress..')
          i.fas.fa-sync

        a.icon.is-small.has-text-danger.mr-3(
            '*ngIf'='item.urlParseStatus === "error"',
            '(click)'='retryURLParsing.emit(item.id)'
            '[title]'='"URL parse error happened. Click to retry parsing. \\nError message: "+item.urlParseError')
          i.fas.fa-exclamation-triangle

        tt-tag-selector(
            '[tags]'='tags',
            '[selectedIds]'='item.tags',
            '(toggle)'='toggleTagHandler($event, item)',
            '[isTitleCustom]'='true',
            '[isAllTagsVisible]'='false')
          a.has-text-info
            i.fas.fa-hashtag(aria-hidden='true')

        a.icon.is-small.ml-3.has-text-warning(
            '(click)'='toggleFavouriteHandler(item)',
            '[title]'='item.isFavourite ? "Remove from favorite" : "Add to favorite"')
          i.fa-star('[class.fas]'='item.isFavourite', '[class.far]'='!item.isFavourite')

        .dropdown.is-hoverable.is-right.ml-3
          .dropdown-trigger
            a
              span.has-text-primary
                i.far.fa-edit(aria-hidden='true')
          .dropdown-menu(role='menu')
            .dropdown-content
              a.dropdown-item.has-text-success(
                  '*ngIf'='item.status !== "finished"',
                  '(click)'='finishReading.emit(item.id)') Mark as Finished
              a.dropdown-item(
                  '*ngIf'='item.status === "finished"',
                  '(click)'='startReading.emit(item.id)') Mark as Opened
              a.dropdown-item(
                  '*ngIf'='item.status !== "new"',
                  '(click)'='undoReading.emit(item.id)') Mark as New
              a.dropdown-item(
                  '*ngIf'='item.rating !== 0',
                  '(click)'='setRating(item, 0)') Set rating to neutral
              hr.dropdown-divider
              a.dropdown-item.has-text-danger('(click)'='delete.emit(item.id)') Delete


ng-container('*ngIf'='isLoading')
  .notification
    p Loading...

ng-container('*ngIf'='isZeroItems()')
  .notification
    p No items

ng-container('*ngIf'='areAllItemsLoaded && !isZeroItems()')
  .content.is-small.has-text-grey-light.has-text-centered.my-4 The End
